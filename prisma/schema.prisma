generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BusDocumentType {
  REGISTRATION
  INSURANCE
  PERMIT
  FITNESS
  POLLUTION
  ROAD_TAX
}

enum DriverDocumentType {
  DRIVING_LICENSE
  AADHAR_CARD
  PAN_CARD
  VOTER_ID
  DATE_OF_BIRTH
  IMAGE
}

enum Role {
  ADMIN
  USER
}

model User {
  userId    Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  image     String?
  buses     Bus[]
  drivers   Driver[]
  trips     Trip[]
  paid      Boolean  @default(false)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

model Bus {
  id        Int           @id @default(autoincrement())
  name      String        @unique
  userId    Int
  user      User          @relation(fields: [userId], references: [userId])
  documents BusDocument[]
  trips     Trip[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([userId])
}

model Driver {
  id        Int              @id @default(autoincrement())
  name      String           @unique
  contact   String           @unique
  image     String?
  userId    Int
  user      User             @relation(fields: [userId], references: [userId])
  documents DriverDocument[]
  trips     Trip[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  @@index([userId])
}

model BusDocument {
  id         Int             @id @default(autoincrement())
  busId      Int
  bus        Bus             @relation(fields: [busId], references: [id])
  type       BusDocumentType
  link       String
  expiryDate DateTime
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@index([busId])
}

model DriverDocument {
  id         Int                @id @default(autoincrement())
  driverId   Int
  driver     Driver             @relation(fields: [driverId], references: [id])
  type       DriverDocumentType
  link       String
  expiryDate DateTime
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt

  @@index([driverId])
}

model Trip {
  id              Int      @id @default(autoincrement())
  busId           Int
  bus             Bus      @relation(fields: [busId], references: [id])
  driverId        Int
  driver          Driver   @relation(fields: [driverId], references: [id])
  userId          Int
  user            User     @relation(fields: [userId], references: [userId])
  routeFrom       String
  routeTo         String
  startTime       DateTime
  endTime         DateTime
  fare            Int?     @default(0)
  maintenanceCost Int?     @default(0)
  fuelCost        Int?     @default(0)
  otherCost       Int?     @default(0)
  description     String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([busId])
  @@index([driverId])
  @@index([userId])
}

model Location {
  id   Int    @id @default(autoincrement())
  name String @unique
}
